<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/MapProfdocHISMessageToMvkRiv_GetBookingDetails_res.map" md5sum="75aee28dd5c21115a6841d25cf2d81a5" version="7.0.400" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.400
*
*   Mapping file:		MapProfdocHISMessageToMvkRiv_GetBookingDetails_res.map
*   Map declaration(s):	MapProfdocHISMessageToMvkRiv_GetBookingDetails_res
*   Input file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Burn%253Amvk%253Aasb%253Atakecare%253Av100%253ATakeCareServiceBO%257DTakeCareServiceBO/message%3D%257Burn%253Amvk%253Aasb%253Atakecare%253Av100%253AgetbookingInternalInterface%257DinvokeTakeCareResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/transientContext%3D%257Burn%253Amvk%253Aasb%253Atakecare%253Av100%253ATakeCareServiceBO%257DTakeCareServiceBO/message%3D%257Burn%253Amvk%253Aasb%253Atidbok%253Ainteraction%253AGetBookingDetails%253A1%253A0%257DGetBookingDetailsResponse/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in2="wsdl.urn:mvk:asb:takecare:v100:getbookingInternalInterface"
    xmlns:in3="urn:mvk:asb:takecare:v100:getbookingInternalInterface"
    xmlns:in4="urn:ProfdocHISMessage:Error"
    xmlns:in="urn:ProfdocHISMessage:GetBookings:Response"
    xmlns:io9="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io="urn:mvk:asb:takecare:v100:TakeCareServiceBO"
    xmlns:io10="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io11="urn:mvk:asb:tidbok:MakeBookingResponder:1:0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io2="urn:mvk:asb:tidbok:1:0"
    xmlns:io3="urn:mvk:asb:common:base:1"
    xmlns:out="wsdl.urn:mvk:asb:tidbok:interaction:GetBookingDetails:1:0"
    xmlns:io12="urn:mvk:asb:tidbok:GetAllTimeTypesResponder:1:0"
    xmlns:io4="urn:mvk:asb:tidbok:GetBookingDetailsResponder:1:0"
    xmlns:io13="urn:mvk:asb:tidbok:CancelBookingResponder:1:0"
    xmlns:io14="urn:mvk:asb:takecare:v100:TakeCareCommonAttribute"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io6="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io15="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io7="urn:mvk:asb:tidbok:GetSubjectOfCareScheduleResponder:1:0"
    xmlns:io16="urn:mvk:asb:tidbok:GetAvailableTimeslotsResponder:1:0"
    xmlns:xsd4xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io8="urn:mvk:asb:tidbok:GetAvailableDatesResponder:1:0"
    xmlns:io17="http://www.w3.org/2005/08/addressing"
    xmlns:io18="urn:mvk:asb:tidbok:UpdateBookingResponder:1:0"
    xmlns:TimebookUtils="xalan://se.modul1.mvk.asb.timebooking.takecare.java.TimebookUtils"
    xmlns:StringUtils="xalan://se.modul1.mvk.asb.common.java.utils.StringUtils"
    xmlns:map="http://Mvk_Scheduling_TakeCare_Adapter/xslt/MapProfdocHISMessageToMvkRiv_GetBookingDetails_res"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="StringUtils set in msl math exsl in2 in3 date in4 xalan str TimebookUtils map"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <dataObject>
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io10:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:MapProfdocHISMessageToMvkRiv_GetBookingDetails_res2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </dataObject>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io10:smo" mode="map:MapProfdocHISMessageToMvkRiv_GetBookingDetails_res"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io10:smo" to "io10:smo".  -->
  <xsl:template match="io10:smo"  mode="map:MapProfdocHISMessageToMvkRiv_GetBookingDetails_res">
    <io10:smo>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out:GetBookingDetailsResponse'"/>
        </xsl:attribute>
        <io4:GetBookingDetailsResponse>
          <!-- a merge transform -->
          <!-- variables for custom code -->
          <xsl:variable name="Booking" select="body/in3:invokeTakeCareResponse/in:ProfdocHISMessage/Bookings/Booking"/>
          <xsl:variable name="CareUnitId" select="body/in3:invokeTakeCareResponse/in:ProfdocHISMessage/Bookings[1]/@CareUnitId"/>
          <xsl:variable name="CareUnitName" select="body/in3:invokeTakeCareResponse/in:ProfdocHISMessage/Bookings[1]/@CareUnitName"/>
          <xsl:call-template name="localBooking_et_alToTimeslotDetail_471534043">
            <xsl:with-param name="Booking" select="$Booking"/>
            <xsl:with-param name="CareUnitId" select="$CareUnitId"/>
            <xsl:with-param name="CareUnitName" select="$CareUnitName"/>
          </xsl:call-template>
        </io4:GetBookingDetailsResponse>
      </body>
    </io10:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io10:smo" to "io10:smo".  -->
  <xsl:template name="map:MapProfdocHISMessageToMvkRiv_GetBookingDetails_res2">
    <xsl:param name="smo"/>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:GetBookingDetailsResponse'"/>
      </xsl:attribute>
      <io4:GetBookingDetailsResponse>
        <!-- a merge transform -->
        <!-- variables for custom code -->
        <xsl:variable name="Booking" select="$smo/body/in3:invokeTakeCareResponse/in:ProfdocHISMessage/Bookings/Booking"/>
        <xsl:variable name="CareUnitId" select="$smo/body/in3:invokeTakeCareResponse/in:ProfdocHISMessage/Bookings[1]/@CareUnitId"/>
        <xsl:variable name="CareUnitName" select="$smo/body/in3:invokeTakeCareResponse/in:ProfdocHISMessage/Bookings[1]/@CareUnitName"/>
        <xsl:call-template name="localBooking_et_alToTimeslotDetail_471534043">
          <xsl:with-param name="Booking" select="$Booking"/>
          <xsl:with-param name="CareUnitId" select="$CareUnitId"/>
          <xsl:with-param name="CareUnitName" select="$CareUnitName"/>
        </xsl:call-template>
      </io4:GetBookingDetailsResponse>
    </body>
  </xsl:template>

  <!-- This rule represents a merge transform.  -->
  <xsl:template name="localBooking_et_alToTimeslotDetail_471534043">
    <xsl:param name="Booking"/>
    <xsl:param name="CareUnitId"/>
    <xsl:param name="CareUnitName"/>
    <io4:timeslotDetail>
      <!-- a simple data mapping: "$Booking/StartTime"(unsignedLong) to "io2:startTimeInclusive"(TS) -->
      <io2:startTimeInclusive>
        <xsl:value-of select="$Booking/StartTime"/>
      </io2:startTimeInclusive>
      <!-- a simple data mapping: "$Booking/EndTime"(unsignedLong) to "io2:endTimeExclusive"(TS) -->
      <io2:endTimeExclusive>
        <xsl:value-of select="$Booking/EndTime"/>
      </io2:endTimeExclusive>
      <!-- a simple data mapping: "$CareUnitId"(string) to "io2:healthcare_facility"(HsaIdType) -->
      <io2:healthcare_facility>
        <xsl:value-of select="$CareUnitId/."/>
      </io2:healthcare_facility>
      <!-- variables for custom code -->
      <xsl:variable name="ResourceId" select="$Booking/Resources/Resource[1]/ResourceId"/>
      <xsl:variable name="ResourceType" select="$Booking/Resources/Resource[1]/ResourceType"/>
      <xsl:variable name="ResourceName2" select="$Booking/Resources/Resource[1]/ResourceName"/>
      <xsl:variable name="BookingId" select="$Booking/BookingId"/>
      <xsl:variable name="CareUnitName1" select="$CareUnitName/."/>
      <xsl:variable name="PatientId" select="$Booking/PatientId"/>
      <xsl:variable name="PatientReason" select="$Booking/PatientReason"/>
      <xsl:choose>
        <xsl:when test="$ResourceType = 1">
          <!-- a simple data mapping: "$Booking/Resources/Resource[1]/ResourceId"(unsignedLong) to "io2:performer"(HsaIdType) -->
          <io2:performer>
            <xsl:value-of select="$Booking/Resources/Resource[1]/ResourceId"/>
          </io2:performer>
          <!-- a simple data mapping: "$Booking/BookingId"(string) to "io2:bookingId"(BookingIdType) -->
          <io2:bookingId>
            <xsl:value-of select="$Booking/BookingId"/>
          </io2:bookingId>
          <!-- a simple data mapping: "$Booking/PatientId"(unsignedLong) to "io2:subject_of_care"(SubjectOfCareIdType) -->
          <io2:subject_of_care>
            <xsl:value-of select="$Booking/PatientId"/>
          </io2:subject_of_care>
          <!-- a simple data mapping: "$Booking/PatientReason"(string) to "io2:reason"(string) -->
          <io2:reason>
            <xsl:value-of select="$Booking/PatientReason"/>
          </io2:reason>
          <!-- a simple mapping with no associated source:  to "io2:resourceName"(string) -->
          <io2:resourceName>
            <xsl:text></xsl:text>
          </io2:resourceName>
          <!-- a simple data mapping: "$CareUnitName"(string) to "io2:healthcare_facility_name"(string) -->
          <io2:healthcare_facility_name>
            <xsl:value-of select="$CareUnitName/."/>
          </io2:healthcare_facility_name>
          <!-- a simple data mapping: "$Booking/Resources/Resource[1]/ResourceName"(string) to "io2:performerName"(string) -->
          <io2:performerName>
            <xsl:value-of select="$Booking/Resources/Resource[1]/ResourceName"/>
          </io2:performerName>
          <!-- a simple mapping with no associated source:  to "io2:resourceID"(ResourceIDType) -->
          <io2:resourceID>
            <xsl:text></xsl:text>
          </io2:resourceID>
        </xsl:when>
        <xsl:otherwise>
          <!-- a simple mapping with no associated source:  to "io2:performer"(HsaIdType) -->
          <io2:performer>
            <xsl:text></xsl:text>
          </io2:performer>
          <!-- a simple data mapping: "$Booking/BookingId"(string) to "io2:bookingId"(BookingIdType) -->
          <io2:bookingId>
            <xsl:value-of select="$Booking/BookingId"/>
          </io2:bookingId>
          <!-- a simple data mapping: "$Booking/PatientId"(unsignedLong) to "io2:subject_of_care"(SubjectOfCareIdType) -->
          <io2:subject_of_care>
            <xsl:value-of select="$Booking/PatientId"/>
          </io2:subject_of_care>
          <!-- a simple data mapping: "$Booking/PatientReason"(string) to "io2:reason"(string) -->
          <io2:reason>
            <xsl:value-of select="$Booking/PatientReason"/>
          </io2:reason>
          <!-- a simple data mapping: "$Booking/Resources/Resource[1]/ResourceName"(string) to "io2:resourceName"(string) -->
          <io2:resourceName>
            <xsl:value-of select="$Booking/Resources/Resource[1]/ResourceName"/>
          </io2:resourceName>
          <!-- a simple data mapping: "$CareUnitName"(string) to "io2:healthcare_facility_name"(string) -->
          <io2:healthcare_facility_name>
            <xsl:value-of select="$CareUnitName/."/>
          </io2:healthcare_facility_name>
          <!-- a simple mapping with no associated source:  to "io2:performerName"(string) -->
          <io2:performerName>
            <xsl:text></xsl:text>
          </io2:performerName>
          <!-- a simple data mapping: "$Booking/Resources/Resource[1]/ResourceId"(unsignedLong) to "io2:resourceID"(ResourceIDType) -->
          <io2:resourceID>
            <xsl:value-of select="$Booking/Resources/Resource[1]/ResourceId"/>
          </io2:resourceID>
        </xsl:otherwise>
      </xsl:choose>
      <!-- a simple data mapping: "$Booking/TimeTypeName"(string) to "io2:timeTypeName"(string) -->
      <xsl:if test="$Booking/TimeTypeName">
        <io2:timeTypeName>
          <xsl:value-of select="$Booking/TimeTypeName"/>
        </io2:timeTypeName>
      </xsl:if>
      <!-- a simple data mapping: "$Booking/TimeTypeId"(unsignedShort) to "io2:timeTypeID"(TimeTypeIDType) -->
      <xsl:if test="$Booking/TimeTypeId">
        <io2:timeTypeID>
          <xsl:value-of select="$Booking/TimeTypeId"/>
        </io2:timeTypeID>
      </xsl:if>
      <!-- a simple data mapping: "$Booking/CancelAllowed"(<unsignedByte>) to "io2:cancel_booking_allowed"(boolean) -->
      <xsl:if test="$Booking/CancelAllowed">
        <io2:cancel_booking_allowed>
          <!-- variables for custom code -->
          <xsl:variable name="CancelAllowed" select="$Booking/CancelAllowed"/>
          <xsl:value-of select="TimebookUtils:convertToBoolean($CancelAllowed)"/>
        </io2:cancel_booking_allowed>
      </xsl:if>
      <!-- a simple data mapping: "$Booking/RescheduleAllowed"(<unsignedByte>) to "io2:rebooking_allowed"(boolean) -->
      <xsl:if test="$Booking/RescheduleAllowed">
        <io2:rebooking_allowed>
          <!-- variables for custom code -->
          <xsl:variable name="RescheduleAllowed" select="$Booking/RescheduleAllowed"/>
          <xsl:value-of select="TimebookUtils:convertToBoolean($RescheduleAllowed)"/>
        </io2:rebooking_allowed>
      </xsl:if>
      <!-- a simple mapping with no associated source:  to "io2:message_allowed"(boolean) -->
      <io2:message_allowed>
        <xsl:text>true</xsl:text>
      </io2:message_allowed>
    </io4:timeslotDetail>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
