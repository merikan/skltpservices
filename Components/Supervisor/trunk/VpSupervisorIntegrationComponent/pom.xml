<?xml version="1.0" encoding="UTF-8"?>
<!-- DON'T CHANGE THE CONTENT OF THIS COMMENT UNLESS YOU REALLY KNOW WHAT 
	YOU ARE DOING! [soi-toolkit.gen.version=0.5.0] [soi-toolkit.gen.type=services] 
	[soi-toolkit.gen.createDate=2012-07-13T08:44:12.308+02:00] [soi-toolkit.gen.artifactId=VpSupervisorIntegrationComponent] -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>se.skl.tp.vp</groupId>
		<artifactId>VpSupervisor</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<groupId>se.skl.tp.vp</groupId>
	<artifactId>VpSupervisorIntegrationComponent</artifactId>
	<packaging>mule</packaging>
	<name>${project.artifactId}</name>

	<dependencies>

		<dependency>
			<groupId>org.soitoolkit.commons.components</groupId>
			<artifactId>soitoolkit-commons-mule</artifactId>
			<version>${soitoolkit.version}</version>
		</dependency>

		<dependency>
			<groupId>org.soitoolkit.commons.poms</groupId>
			<artifactId>soitoolkit-test-dependencies</artifactId>
			<version>${soitoolkit.version}</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.soitoolkit.commons.poms.mule-dependencies</groupId>
			<artifactId>soitoolkit-mule-3.2.1-dependencies</artifactId>
			<version>${soitoolkit.version}</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>se.skl.tp</groupId>
			<artifactId>pingforconfiguration-schemas</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.18</version>
		</dependency>

		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.6.2.1</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<!-- To get mule-config files from the Mule Studio defined resource-folder 
					in the classpath... -->
				<directory>${basedir}/src/main/app</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<!-- Add mule-nature to the eclipse-.project-file -->
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.mule.tooling.core.muleNature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.mule.tools</groupId>
				<artifactId>maven-mule-plugin</artifactId>
				<extensions>true</extensions>
				<!-- Include mule-dependencies that doesn't come with Mule 3.x otherwise 
					we can't install to a vanilla Mule 3.x installation -->
				<configuration>
					<inclusions>
						<inclusion>
							<groupId>org.mule.modules</groupId>
							<artifactId>commonretrypolicies</artifactId>
						</inclusion>
						<inclusion>
							<groupId>org.mule.transports</groupId>
							<artifactId>mule-transport-restlet</artifactId>
						</inclusion>
						<inclusion>
							<groupId>org.mule.modules</groupId>
							<artifactId>mule-module-rest</artifactId>
						</inclusion>
						<inclusion>
							<groupId>org.mule.modules</groupId>
							<artifactId>devkit</artifactId>
						</inclusion>
					</inclusions>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- if no classifier is declared, then a mvn install results in a file 
						in the local repo: ic2-1.0.0-SNAPSHOT.mule which is a jar-file - only strangely 
						named and with a bad extension -->
					<classifier>core</classifier>
					<excludes>
						<exclude>log4j.xml</exclude>
						<!-- <exclude>mule-deploy.properties</exclude> -->
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>
		<profile>
			<id>muleServer</id>
			<!-- Start mule server with the command "mvn -PmuleServer" or "mvn -PmuleServer 
				-Dexec.args="${artifaceId}-config.xml"" if you want to override the default 
				config-file -->
			<build>
				<defaultGoal>test</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>se.skl.tp.vp.supervisoric.VpSupervisorMuleServer</mainClass>
									<classpathScope>test</classpathScope>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>