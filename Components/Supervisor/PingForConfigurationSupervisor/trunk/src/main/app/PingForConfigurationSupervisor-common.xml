<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (c) 2012, Sjukvardsradgivningen. All rights reserved.

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
    MA 02110-1301  USA

-->
<mule 
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc"
	xmlns:management="http://www.mulesoft.org/schema/mule/management"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:rest="http://www.mulesoft.org/schema/mule/rest"
	xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.mulesoft.org/schema/mule/core       http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/jms        http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
		http://www.mulesoft.org/schema/mule/jdbc       http://www.mulesoft.org/schema/mule/jdbc/current/mule-jdbc.xsd
		http://www.mulesoft.org/schema/mule/management http://www.mulesoft.org/schema/mule/management/current/mule-management.xsd
		http://www.mulesoft.org/schema/mule/json       http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
		http://www.mulesoft.org/schema/mule/scripting  http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
		http://www.mulesoft.org/schema/mule/rest       http://www.mulesoft.org/schema/mule/rest/current/mule-rest.xsd
		http://www.mulesoft.org/schema/mule/https      http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
		http://www.mulesoft.org/schema/mule/http      http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
		http://www.mulesoft.org/schema/mule/vm        http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
		http://www.mulesoft.org/schema/mule/xml        http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
	">

  <!-- Load property files in three steps... -->
  
  <!-- 1. Support for decrypting encrypted properties.
       The encryption password will be read from an environment variable
       called "SOITOOLKIT_ENCRYPTION_PASSWORD" which, once
       the application has been started, could be safely unset. -->
  <spring:bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
    <spring:property name="algorithm" value="PBEWithMD5AndDES"/>
    <spring:property name="passwordEnvName" value="SOITOOLKIT_ENCRYPTION_PASSWORD"/>
  </spring:bean>
  
  
  <!-- 2. Support for decrypting encrypted properties -->
  <spring:bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
    <spring:property name="config" ref="environmentVariablesConfiguration"/>
  </spring:bean>
  
  
  <!-- 3. Replacement for org.springframework.beans.factory.config.PropertyPlaceholderConfigurer
       that supports decrypting encrypted property values -->
  <spring:bean id="propertyConfigurer" class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
    <spring:constructor-arg ref="configurationEncryptor"/>
    <spring:property name="ignoreResourceNotFound" value="true"/>
    <spring:property name="locations">
      <spring:list>
        <spring:value>classpath:PingForConfigurationSupervisor-config.properties</spring:value>
        <spring:value>classpath:PingForConfigurationSupervisor-config-override.properties</spring:value>
      </spring:list>
    </spring:property>
  </spring:bean>
  

    <!-- Common connectors and endpoints, i.e. that not needs to be changed for different config-files (local unit-test, integration-test or production environments) -->
  
    <spring:beans>
        <!-- 
         <spring:import resource="classpath:soitoolkit-mule-jms-connector-activemq-external.xml"/>
          -->
    	 <spring:import resource="classpath:soitoolkit-mule-http-connector.xml"/>
   		 <spring:import resource="classpath:soitoolkit-mule-https-connector.xml"/>
    </spring:beans>


	<custom-transformer name="createCorrId"  class="org.soitoolkit.commons.mule.log.correlationid.CreateCorrelationIdTransformer" />
	<custom-transformer name="saveCorrId"    class="org.soitoolkit.commons.mule.log.correlationid.SaveCorrelationIdTransformer" />
	<custom-transformer name="restoreCorrId" class="org.soitoolkit.commons.mule.log.correlationid.RestoreCorrelationIdTransformer" />

	<mulexml:jaxb-context name="jaxbContext" packageNames="org.soitoolkit.commons.logentry.schema.v1:se.riv.itintegration.monitoring.v1"/>

	<custom-transformer name="XmlToXSR" class="org.mule.module.xml.transformer.XmlToXMLStreamReader">
   		<spring:property name="reversible" value="true"/>
	</custom-transformer>
	    
     <!--  FIXME: do not change logType, beacuse it's a hard-coded type used by Evactor active monitoring sub-system -->
    <custom-transformer name="monitorLogRequest" class="se.skl.skltpservices.supervisor.transformer.MonitorLogTransformer">
		<spring:property name="logType"  value="req-out"/>
		<spring:property name="jaxbContext"  ref="jaxbContext"/>
    </custom-transformer>
    
    <custom-transformer name="monitorLogResponse" class="se.skl.skltpservices.supervisor.transformer.MonitorLogTransformer">
		<spring:property name="logType"  value="resp-in"/>
		<spring:property name="jaxbContext"  ref="jaxbContext"/>
    </custom-transformer>

    <!-- TODO: Add global definitions here -->

</mule>