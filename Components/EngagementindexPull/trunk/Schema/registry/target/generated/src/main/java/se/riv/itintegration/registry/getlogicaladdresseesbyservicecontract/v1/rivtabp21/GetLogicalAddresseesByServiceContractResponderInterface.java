package se.riv.itintegration.registry.getlogicaladdresseesbyservicecontract.v1.rivtabp21;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 2.2.2
 * Mon Apr 30 19:52:45 CEST 2012
 * Generated source version: 2.2.2
 * 
 */
 
@WebService(targetNamespace = "urn:riv:itintegration:registry:GetLogicalAddresseesByServiceContract:1:rivtabp21", name = "GetLogicalAddresseesByServiceContractResponderInterface")
@XmlSeeAlso({se.riv.itintegration.registry.getlogicaladdresseesbyservicecontractresponder.v1.ObjectFactory.class,se.riv.itintegration.registry.v1.ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface GetLogicalAddresseesByServiceContractResponderInterface {

    @WebResult(name = "GetLogicalAddresseesByServiceContractResponse", targetNamespace = "urn:riv:itintegration:registry:GetLogicalAddresseesByServiceContractResponder:1", partName = "parameters")
    @WebMethod(operationName = "GetLogicalAddresseesByServiceContract", action = "urn:riv:itintegration:registry:GetLogicalAddresseesByServiceContractResponder:1:GetLogicalAddresseesByServiceContract")
    public se.riv.itintegration.registry.getlogicaladdresseesbyservicecontractresponder.v1.GetLogicalAddresseesByServiceContractResponseType getLogicalAddresseesByServiceContract(
        @WebParam(partName = "LogicalAddress", name = "LogicalAddress", targetNamespace = "urn:riv:itintegration:registry:1", header = true)
        java.lang.String logicalAddress,
        @WebParam(partName = "parameters", name = "GetLogicalAddresseesByServiceContract", targetNamespace = "urn:riv:itintegration:registry:GetLogicalAddresseesByServiceContractResponder:1")
        se.riv.itintegration.registry.getlogicaladdresseesbyservicecontractresponder.v1.GetLogicalAddresseesByServiceContractType parameters
    );
}
