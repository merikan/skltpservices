# Test Address to "tjänstekatalogen" where you get the logical addresses you should contact to check for updates.
ei.address.service.address.logical=Kalle
ei.address.service.address.uri=http://localhost:10001/testproducer/GetLogicalAddresseesByServiceContractResponder/V1

# Test Address to fetch updates from.
ei.pull.address.servicedomains=riv:crm:scheduling, riv:itintegration:engagementindex, riv:careprocess:request
ei.pull.address.uri=http://localhost:10001/testproducer/GetUpdatesResponder/V1

# This is the HSA-ID of the organization which the engagement index belongs to
ei.pull.belongsto.hsaid=Kalel
ei.pull.time.format=yyyyMMddHHmmss

# Time offset in seconds, 604800 is one week (60 x 60 x 24 x 7 = 604800)
ei.pull.time.offset=604800

# Test Address to the "Engagemangsindex" which you will push up the recently pulled data to.
ei.push.address.logical=Kakel

# This is the service contract name-space of which the engagement index operates in
ei.push.address.servicedomain=SOME URI
ei.push.address.uri=http://localhost:10001/testproducer/UpdateResponder/V1

# Define the file appender
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=${app.home}/logs/ei-pull.log

# Define the layout for file appender
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} - %m%n

# Logging configuration
log4j.rootLogger=INFO, FILE
log4j.threshold=INFO
